<script src="//$!{ServerPath}/s/domsort.js"></script>
<main>

    <div class="section tab">
        <div class="row tab">
            <div class="">
                <div class="nav-content">
                    <ul class="tabs">
                        <div id="tabs0"></div>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="section op" id="index-banner">
        <div class="container">
            <div class="row op">
                <a class=" ripple " href="javascript:Task.openAdd()" id="op-add">
                    <i class="icon iconfont icon-folder"></i>
                    <i class="icon iconfont icon-add" style="position:absolute;left:15px;top:4px;font-size:16px"></i>
                </a>
                <a class="ripple" href="javascript:;" id="op-edit" style="color:#ccc">
                    <i class="icon iconfont icon-edit"></i>
                </a>
                <a class="ripple" href="javascript:;" id="op-delete" style="color:#ccc">
                    <i class="icon iconfont icon-delete"></i>
                </a>
            </div>
        </div>
    </div>

    <div class="container" style="padding: 30px;">
        <div class="row">
            <div class="col s12 offset-m1 xl12  center-on-small-only">
                <div id="materialdesign" class="section scrollspy">
                    <div id="project-task-list"></div>
                </div>
            </div>
        </div>
    </div>

</main>

<div id="modal1" class="modal ">
    <div id="task"></div>
</div>
<div id="modal2" class="modal ">
    <div class="modal-content">
        <div id="runSelect-result"></div>
    </div>
    <div class="modal-footer">
        <a href="javascript:;" class="modal-close waves-effect waves-green btn-flat">关闭</a>
    </div>
</div>

<script id="tmpl-tabs0" type="text/html">
    <li class="tab"><a href="javascript:;" onclick="window.location.href='//$!{ServerPath}/project/detail_interface.html?id={{id}}'">接口</a></li>
    <li class="tab"><a href="javascript:;" onclick="window.location.href='//$!{ServerPath}/project/detail_case.html?id={{id}}'">用例</a></li>
    <li class="tab"><a href="javascript:;" onclick="window.location.href='//$!{ServerPath}/project/detail_scene.html?id=$!{id}'">测试集</a></li>
    <li class="tab"><a class="active" href="javascript:;" onclick="window.location.href='//$!{ServerPath}/project/detail_task.html?id={{id}}'">任务</a></li>
    {{if creator=='$!{zdPIN}' || '$!{zdGROUP}'=='admin' }}
    <li class="tab" s="{{creator}}"><a href="javascript:;" onclick="window.location.href='//$!{ServerPath}/project/detail_member.html?id={{id}}'">成员</a>
    </li>
    {{/if}}
</script>

<script id="tmpl-task" type="text/html">

    <div class="modal-content">
        <form id="add-task-form">
            <div class="row">
                <div class="col s12">
                    <div class="row">
                        <input type="hidden" id="taskscenes" value="{{scenes}}">
                        <div class="input-field col s12">
                            <input type="text" id="taskname" class="autocomplete"
                                   value="{{if name==null}}新任务{{else}}{{name}}{{/if}}">
                            <label for="taskname" class="active">任务名称</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s8">
                            <input type="text" id="taskcon" class="autocomplete" value="{{con}}">
                            <label for="taskcon" class="active">表达式</label>
                        </div>
                        <div class="input-field col s4">
                            <select id="" onchange="$('#taskcon').val($(this).val())">
                                <option>请选择</option>
                                <option value="0 0/30 * * * ?">每30分钟</option>
                                <option value="0 0 0/1 * * ?">每小时</option>
                                <option value="0 0 2 * * ?">每天凌晨2点</option>
                                <option value="0 0 2 ? * SAT">每周日凌晨2点</option>
                            </select>
                            <label>表达式参考</label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="input-field col s7">
                            <div id="task-scene-list-selected" style="margin-top:33px;padding-left:5px"></div>
                            <label class="active">勾选执行的接口</label>
                        </div>
                        <div class="input-field col s5" style="padding-left:50px">
                            <div id="task-scene-list"></div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <a href="javascript:;" class="waves-effect waves-green btn-flat" onclick="{{fn}}">确认</a>
        <a href="javascript:;" class="modal-close waves-effect waves-green btn-flat">关闭</a>
    </div>
</script>

<script id="tmpl-project-name" type="text/html">
    <span class="a" onclick="window.location.href='//$!{ServerPath}/project/list.html'">
        <i style="vertical-align: middle;" class="icon iconfont icon-back"></i>
        项目
    </span>
    <span class="b">任务</span>
</script>

<script id="tmpl-project-task-list" type="text/html">
    <table class="table-fixed highlight">
        <thead>
        <tr>
            <th width="5%">
                <label>
                    <input type="checkbox" class="filled-in list-checkbox" check-for="check-item"
                           onclick="X.checkAll(this)"/>
                    <span></span>
                </label>
            </th>
            <th width="5%"></th>
            <th width="20%" class="ant-table-column-has-actions">
                任务名称
                <div class="ant-table-column-sorter">
                    <i class="anticon anticon-caret-up ant-table-column-sorter-up on">
                        <svg viewBox="0 0 1024 1024" class="" data-icon="caret-up" width="1em" height="1em" fill="currentColor" aria-hidden="true">
                            <path d="M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z"></path>
                        </svg></i>
                    <i class="anticon anticon-caret-down ant-table-column-sorter-down off">
                        <svg viewBox="0 0 1024 1024" class="" data-icon="caret-down" width="1em" height="1em" fill="currentColor" aria-hidden="true">
                            <path d="M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"></path>
                        </svg>
                    </i>
                </div>
            </th>
            <th width="8%">测试集个数</th>
            <th width="10%">执行表达式</th>
            <th width="18%">最后执行结果</th>
            <th width="8%">运行状态</th>
            <th width=""></th>
        </tr>
        </thead>

        <tbody>
        {{if (data&&data.length>0)}}
        {{each data as elem i}}
        <tr>
            <td>
                <label>
                    <input type="checkbox" class="filled-in check-item list-checkbox" checkvalue="{{elem.id}}"/>
                    <span></span>
                </label>
            </td>
            <td><i class="icon iconfont icon-task-management icon-light-blue"></i></td>
            <td><a href="//$!{ServerPath}/task/detail.html?id={{elem.id}}&&projectId={{pid}}"
                      ondragend="listElemDragend2(event)"
                      ondragstart="listElemDragstart(event,{{elem.id}},'Task.delete');"
                      >{{elem.name}}</a></td>
            <td>
                ( {{ splitLen(elem.scenes, ',') }} )
            </td>
            <td>{{elem.con}}</td>
            <td>
                {{if elem.lastrun != null && elem.lastrun != '' }}
                <a target="_blank" href="//$!{ServerPath}/task_result/detail.html?resultId={{elem.lastrun}}">

                    <i class="icon iconfont icon-success"></i> 查看结果 ({{ dateFormat(elem.lastruntime,'yyyy/MM/dd HH:mm:ss') }})
##                    {{ elem.lastrunstatus }}
                </a>
                {{/if}}
            </td>
            <td>
                <div class="switch">
                    <label>
                        <input type="checkbox" {{if elem.run }} checked {{/if}} onchange="Task.autoRun(this, {{elem.id}})">
                        <span class="lever" style="margin: 0"></span>
                    </label>
                </div>
            </td>

            <td>
                <a class="ripple" href="javascript:Task.openEdit({{elem.id}});" id="op-edit">
                    <i class="icon iconfont icon-edit"></i>
                </a>
            </td>
        </tr>
        {{/each}}
        {{else}}
        <tr>
            <td colspan="9"> 没有数据。</td>
        </tr>
        {{/if}}
        </tbody>
    </table>
    {{include 'tmpl-pagin' elem}}
</script>


<script id="tmpl-task-scene-select" type="text/html">
    <table class="table-fixed">
        <thead>
        <tr>
            <th width="5%">
                <label>
                    <input type="checkbox" class="filled-in" check-for="check-item1"
                           onclick="X.checkAll(this);Task.sceneSelectAll(this)"/>
                    <span></span>
                </label>
            </th>
            <th width="30%">测试集</th>

        </tr>
        </thead>

        <tbody>
        {{if (data&&data.length>0)}}
        {{each data as elem i}}
        <tr>
            <td style="padding: 3px 10px">
                <label>
                    <input type="checkbox" class="filled-in check-item1"
                           checkvalue="{{elem.id}}"
                           checkname="{{elem.name}}"
                           checkmethod="{{elem.method}}"
                           checkurl="{{elem.url}}"
                           onclick="Task.sceneSelect($(this), {{elem.id}},'{{elem.name}}','{{elem.method}}','{{elem.url}}')"
                           {{if elem.selected }} checked {{/if}} />
                    <span></span>
                </label>
            </td>
            <td style="padding: 3px 10px">
                <span style="display:inline-block;width:50px;color:{{if elem.method=='GET'}}#3eb63e{{else}}#f5a623{{/if}};">
                    <i class="icon iconfont icon-similarproduct icon-light-blue"></i>
                </span>
                <a target="_blank"
                   href="//$!{ServerPath}/scene/detail.html?id={{elem.id}}&&projectId={{pid}}">{{elem.name}}</a>
            </td>

        </tr>
        {{/each}}
        {{else}}

        {{/if}}
        </tbody>
    </table>
</script>

<script>

    var Task = {}
    Project.load = function () {
        X.HTTP({
            url: CONTEXT + "/data/project/single.json",
            data: {
                id: parseInt(X.GetUrlParam("id"))
            },
            dataType: 'json',
            success: function (result) {
                var container = $("#project-name")
                container.html(template("tmpl-project-name", result.data));
                var container2 = $("#tabs0")
                container2.html(template("tmpl-tabs0", result.data));
            }
        });
    }

    Project.loadTask = function (pageIndex, pageSize) {
        X.HTTP({
            url: CONTEXT + "/data/task/list.json",
            data: {
                projectId: parseInt(X.GetUrlParam("id")),
                pageIndex: pageIndex,
                pageSize: pageSize
            },
            dataType: 'json',
            success: function (result) {
                result.data.fn = "Project.loadTask"
                result.data.pid = Project.getID()
                var container = $("#project-task-list")
                container.html(template("tmpl-project-task-list", result.data));
                $("#op-delete").css("color", "#ccc").attr("href", "javascript:;")
                $("#op-edit").css("color", "#ccc").attr("href", "javascript:;")
                $(".list-checkbox").on("click", function () {
                    if ($(".list-checkbox:checked").length > 0) {
                        $("#op-delete").css("color", "").attr("href", "javascript:Task.delete()")
                        $("#op-edit").css("color", "").attr("href", "javascript:Task.openEdit()")
                    } else {
                        $("#op-delete").css("color", "#ccc").attr("href", "javascript:;")
                        $("#op-edit").css("color", "#ccc").attr("href", "javascript:;")
                    }

                })
            }
        });
    }

    Task.add = function () {
        X.HTTP({
            url: CONTEXT + "/data/task/add.json",
            data: {
                projectId: parseInt(X.GetUrlParam("id")),
                name: $('#taskname').val(),
                con: $('#taskcon').val(),
                scenes: $('#taskscenes').val()
            },
            dataType: 'json',
            success: function (result) {
                Project.loadTask(1, 10)
                var instance = M.Modal.getInstance($('#modal1'));
                instance.close()
            }
        });
    }
    Task.edit = function (taskId) {
        if(!taskId) {
            var checkBox = $('.check-item:checked');
            if (checkBox.length > 1) {
                M.toast({html: '选中一项来编辑！'})
                return
            }
            checkBox.each(function () {
                taskId = parseInt($(this).attr("checkvalue"))
            })
        }
        X.HTTP({
            url: CONTEXT + "/data/task/edit.json",
            data: {
                id: taskId,
                name: $('#taskname').val(),
                con: $('#taskcon').val(),
                scenes: $('#taskscenes').val()
            },
            dataType: 'json',
            success: function (result) {
                Project.loadTask(1, 10)
                var instance = M.Modal.getInstance($('#modal1'));
                instance.close()
            }
        });
    }
    Task.delete = function (taskId) {
        var zdTaskIds = new Array();
        if (window.confirm("是否要删除选中项？")) {
            if(!taskId) {
                $('.check-item:checked').each(function () {
                    zdTaskIds.push(parseInt($(this).attr("checkvalue")))
                })
            } else {
                zdTaskIds.push(taskId)
            }

            X.HTTP({
                url: CONTEXT + "/data/task/delete.json",
                data: {
                    zdTaskIds: zdTaskIds,
                },
                dataType: 'json',
                success: function (result) {
                    Project.loadTask(1, 10)
                }
            });
        }
    }

    Task.openAdd = function () {
        var container = $("#task")
        container.html(template("tmpl-task", {"fn": "Task.add()"}));
        container.find('select').not('.disabled').formSelect();
        Task.loadSelectedScenes()
        var instance = M.Modal.getInstance($('#modal1'));
        instance.open();
    }
    Task.openEdit = function (taskId) {
        if(!taskId) {
            var checkBox = $('.check-item:checked');
            if (checkBox.length != 1) {
                M.toast({html: '选中一项来编辑！'})
                return
            }
            checkBox.each(function () {
                taskId = parseInt($(this).attr("checkvalue"))
            })
        }
        X.HTTP({
            url: CONTEXT + "/data/task/single.json",
            data: {
                id: taskId
            },
            dataType: 'json',
            success: function (result) {
                var container = $("#task")
                result.data.fn = "Task.edit("+taskId+")"
                container.html(template("tmpl-task", result.data));
                container.find('select').not('.disabled').formSelect();
                Task.loadSelectedScenes(result.data.scenes)
                var instance = M.Modal.getInstance($('#modal1'));
                instance.open();
            }
        });
    }

    Task.autoRun = function (the, taskId) {
        the = $(the)
        var checked = the.is(':checked')
        X.HTTP({
            url: CONTEXT + "/data/task/autorun.json",
            data: {
                id: taskId,
                run: checked ? true : false
            },
            dataType: 'json',
            success: function (result) {
                console.log(result)
            }
        });
    }

    Task.loadSelectedScenes = function (scenes) {

        X.HTTP({
            url: CONTEXT + "/data/scene/list.json",
            data: {
                projectId: parseInt(X.GetUrlParam("id")),
            },
            dataType: 'json',
            success: function (result) {
                result.data.pid = Project.getID()
                var selectedObject = toSelectedSceneObject(scenes, result.data.data)

                var listContainer = $("#task-scene-list");
                listContainer.html(template("tmpl-task-scene-select", result.data));
                listContainer.find('select').not('.disabled').formSelect();

                var leftCheckedDIV = $("#task-scene-list-selected");

                for (var i in selectedObject) {
                    var id = selectedObject[i].id
                    var name = selectedObject[i].name
                    var method = selectedObject[i].method
                    var url = selectedObject[i].url
                    leftCheckedDIV.append(taskSelectedSceneDIV(id, name, method, url))
                }

            }
        });
    }


    Task.sceneSelectAll = function (the) {

        var leftCheckedDIV = $("#task-scene-list-selected")
        var checked = !($(the).not(':checked').length > 0)
        var checkFor = $(the).attr("check-for")

        if (checked) {
            $("." + checkFor).each(function () {
                var id = $(this).attr('checkvalue');
                var dommentId = "scene_" + id
                leftCheckedDIV.find("#" + dommentId).remove()
            })
            $("." + checkFor).each(function () {
                var id = $(this).attr('checkvalue');
                var name = $(this).attr('checkname');
                var method = $(this).attr('checkmethod');
                var url = $(this).attr('checkurl');
                Task.sceneSelect($(this), id, name, method, url)
            })
        } else {
            $("." + checkFor).each(function () {
                var id = $(this).attr('checkvalue');
                var dommentId = "scene_" + id
                leftCheckedDIV.find("#" + dommentId).remove()
            })

        }

    }

    Task.sceneSelect = function (the, id, name, method, url) {
        var leftCheckedDIV = $("#task-scene-list-selected")
        if (!(the.not(':checked').length > 0)) {
            leftCheckedDIV.append(taskSelectedSceneDIV(id, name, method, url))
        } else {
            var id = "scene_" + id
            leftCheckedDIV.find("#" + id).remove()
        }
        resetTaskScenes()
    }

    Task.scenePrev = function ($this) {
        var leftCheckedDIVRow = $this.parent().parent()
        var leftCheckedDIV = leftCheckedDIVRow.parent()
        $(".oprow").removeClass("oprow")
        leftCheckedDIVRow.addClass("oprow")
        leftCheckedDIVRow.addClass("metril")
        var index = leftCheckedDIV.find('.oprow');
        if (index.index() != 0) {
            leftCheckedDIVRow.prev().before(index)
        }
        setTimeout(function () {
            leftCheckedDIVRow.removeClass("metril")
        }, 500)
        resetTaskScenes()
    }

    Task.sceneNext = function ($this) {
        var leftCheckedDIVRow = $this.parent().parent()
        var leftCheckedDIV = leftCheckedDIVRow.parent()
        $(".oprow").removeClass("oprow")
        leftCheckedDIVRow.addClass("oprow")
        leftCheckedDIVRow.addClass("metril")
        var index = leftCheckedDIV.find('.oprow');
        if (index.index() != length - 1) {
            leftCheckedDIVRow.next().after(index)
        }
        setTimeout(function () {
            leftCheckedDIVRow.removeClass("metril")
        }, 500)
        resetTaskScenes()
    }

    var resetTaskScenes = function () {
        var scenes = "";
        var leftCheckedDIV = $("#task-scene-list-selected")
        leftCheckedDIV.find(".row").each(function (i) {
            if (i != 0) {
                scenes += ","
            }
            scenes += $(this).attr("cid")
        });
        $("#taskscenes").val(scenes)
        console.log(scenes)
    }

    var taskSelectedSceneDIV = function (id, name, method, url) {

        var methodSpan = ""
        if (method == 'GET') {
            methodSpan = "<i class=\"icon iconfont icon-similarproduct icon-light-blue\"></i></span>"
        } else {
            methodSpan = "<i class=\"icon iconfont icon-similarproduct icon-light-blue\"></i>"
        }


        return "<div onmousedown='domsortMouseDown(event,this,resetTaskScenes);' class=\"nextRow row \" id=scene_" + id + " cid=" + id + ">" +
                "<div class=\"rowname input-field col s9\">" + methodSpan +
                " <a style='color:rgb(117, 117, 117)' target=\"_blank\"  ondragstart=\"return false\"  href=\"//$!{ServerPath}/scene/detail.html?id="+id+"&&projectId="+parseInt(X.GetUrlParam("id"))+"\">"
                + name +
                "</a>"+
                "</div>" +
                "</div>"
    }

    var toSelectedSceneObject = function (seletedScenesString, scenesObject) {
        var selectedArray = new Array()
        if (seletedScenesString && seletedScenesString != null && seletedScenesString.trim() != "") {
            var scenesMapAll = new Object()
            if (scenesObject != null) {
                for (var j in scenesObject) {
                    var sceneEntity = scenesObject[j]
                    scenesMapAll[sceneEntity.id] = sceneEntity
                }
            }

            var scenesSplited = seletedScenesString.split(",")
            for (var i in scenesSplited) {
                var sceneId = scenesSplited[i];
                if(!scenesMapAll[sceneId]) {

                } else {
                    scenesMapAll[sceneId].selected = true;
                    selectedArray.push(scenesMapAll[sceneId])
                }

            }


        }
        return selectedArray;
    }


    $(function () {
        Project.load();
        Project.loadTask(1, 10)
    })

</script>
